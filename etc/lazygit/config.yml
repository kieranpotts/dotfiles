gui:
  border: 'hidden'
  showIcons: true # Requires Nerd Font
  showRandomTip: false
  sidePanelWidth: 0.333
  theme:
    # Color names map to ANSI colors configured in terminal.
    activeBorderColor:
      - green
      - bold
    inactiveBorderColor:
      - white
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - reverse
    selectedRangeBgColor:
      - reverse
    cherryPickedCommitBgColor:
      - cyan
    cherryPickedCommitFgColor:
      - blue
    unstagedChangesColor:
      - red
    defaultFgColor:
      - default
git:
  branchLogCmd: 'git log --graph --color=always --decorate --date=relative --oneline {{branchName}} --'
  allBranchesLogCmd: 'git log --graph --all --color=always --decorate --date=relative  --oneline'
customCommands:
  # Overrides built-in 'c' hotkey. The built-in 'C' hotkey may still be used to
  # edit the commit message manually in the default system text editor program.
  - key: 'c'
    description: 'commit using SrcFlow convention'
    command: 'git commit --message="{{index .PromptResponses 0}}: {{index .PromptResponses 1}}"'
    context: 'files'
    subprocess: true
    prompts:
      - type: 'menu'
        title: 'What kind of change is this?'
        options:
          - value: 'attribute' # "property"?
          - value: 'experiment'
          - value: 'feature'
          - value: 'fix'
          - value: 'maintenance'
          - value: 'refactor'
      - type: 'input'
        title: 'Describe the change briefly (lower case text)'
        initialValue: ''
